import { RenderShiftedBox } from '../rendering/shifted-box';
import { BorderSide } from '../painting/borders';
import { FocusNode } from '../widgets/focus-manager';
import { Key } from '../foundation/key';
import { BorderRadius } from '../painting/border-radius';
import { Color, TextDirection } from '../../../mx-dart-sdk';
import { BoxConstraints, RenderBox } from '../rendering/box';
import { TextStyle } from '../painting/text-style';
import { MouseCursor } from '../rendering/mouse-cursor';
import { StatelessWidget, SingleChildRenderObjectWidget } from '../widgets/framework';
import { MXWidget } from '@mxflutter/mxflutter-base';
declare class ToggleButtons extends StatelessWidget {
    children: Array<any>;
    isSelected: Array<any>;
    onPressed: any;
    mouseCursor: MouseCursor;
    textStyle: TextStyle;
    constraints: BoxConstraints;
    color: Color;
    selectedColor: Color;
    disabledColor: Color;
    fillColor: Color;
    focusColor: Color;
    highlightColor: Color;
    splashColor: Color;
    hoverColor: Color;
    focusNodes: Array<any>;
    renderBorder: boolean;
    borderColor: Color;
    selectedBorderColor: Color;
    disabledBorderColor: Color;
    borderWidth: number;
    borderRadius: BorderRadius;
    constructor(namedParameters?: {
        key?: Key;
        children?: Array<any>;
        isSelected?: Array<any>;
        onPressed?: any;
        mouseCursor?: MouseCursor;
        textStyle?: TextStyle;
        constraints?: BoxConstraints;
        color?: Color;
        selectedColor?: Color;
        disabledColor?: Color;
        fillColor?: Color;
        focusColor?: Color;
        highlightColor?: Color;
        hoverColor?: Color;
        splashColor?: Color;
        focusNodes?: Array<any>;
        renderBorder?: boolean;
        borderColor?: Color;
        selectedBorderColor?: Color;
        disabledBorderColor?: Color;
        borderRadius?: BorderRadius;
        borderWidth?: number;
    });
}
export { ToggleButtons };
declare class _ToggleButton extends StatelessWidget {
    selected: boolean;
    textStyle: TextStyle;
    constraints: BoxConstraints;
    color: Color;
    selectedColor: Color;
    disabledColor: Color;
    fillColor: Color;
    focusColor: Color;
    hoverColor: Color;
    highlightColor: Color;
    splashColor: Color;
    focusNode: FocusNode;
    onPressed: any;
    mouseCursor: MouseCursor;
    leadingBorderSide: BorderSide;
    horizontalBorderSide: BorderSide;
    trailingBorderSide: BorderSide;
    borderRadius: BorderRadius;
    clipRadius: BorderRadius;
    isFirstButton: boolean;
    isLastButton: boolean;
    child: MXWidget;
    constructor(namedParameters?: {
        key?: Key;
        selected?: boolean;
        textStyle?: TextStyle;
        constraints?: BoxConstraints;
        color?: Color;
        selectedColor?: Color;
        disabledColor?: Color;
        fillColor?: Color;
        focusColor?: Color;
        highlightColor?: Color;
        hoverColor?: Color;
        splashColor?: Color;
        focusNode?: FocusNode;
        onPressed?: any;
        mouseCursor?: MouseCursor;
        leadingBorderSide?: BorderSide;
        horizontalBorderSide?: BorderSide;
        trailingBorderSide?: BorderSide;
        borderRadius?: BorderRadius;
        clipRadius?: BorderRadius;
        isFirstButton?: boolean;
        isLastButton?: boolean;
        child?: MXWidget;
    });
}
export { _ToggleButton };
declare class _SelectToggleButton extends SingleChildRenderObjectWidget {
    leadingBorderSide: BorderSide;
    horizontalBorderSide: BorderSide;
    trailingBorderSide: BorderSide;
    borderRadius: BorderRadius;
    isFirstButton: boolean;
    isLastButton: boolean;
    constructor(namedParameters?: {
        key?: Key;
        child?: MXWidget;
        leadingBorderSide?: BorderSide;
        horizontalBorderSide?: BorderSide;
        trailingBorderSide?: BorderSide;
        borderRadius?: BorderRadius;
        isFirstButton?: boolean;
        isLastButton?: boolean;
    });
}
export { _SelectToggleButton };
declare class _SelectToggleButtonRenderObject extends RenderShiftedBox {
    leadingBorderSide: BorderSide;
    horizontalBorderSide: BorderSide;
    trailingBorderSide: BorderSide;
    borderRadius: BorderRadius;
    isFirstButton: boolean;
    isLastButton: boolean;
    textDirection: TextDirection;
    constructor(_leadingBorderSide?: BorderSide, _horizontalBorderSide?: BorderSide, _trailingBorderSide?: BorderSide, _borderRadius?: BorderRadius, _isFirstButton?: boolean, _isLastButton?: boolean, _textDirection?: TextDirection, child?: RenderBox);
}
export { _SelectToggleButtonRenderObject };
